{
  "version": 3,
  "sources": ["../src/extension.ts", "../src/lib/constants.ts", "../src/registration.ts", "../src/configuration.ts", "../src/lib/disposables/commands.ts", "../src/lib/commons.ts", "../src/lib/patterns.ts", "../src/lib/disposables/listeners.ts", "../src/lib/token.ts"],
  "sourcesContent": ["import * as vscode from 'vscode';\n\nimport { EXTENSION_ID } from './lib/constants';\nimport { registration } from './registration';\n\nexport function activate(context: vscode.ExtensionContext) {\n  context.subscriptions.push(...registration(EXTENSION_ID));\n}\n\nexport function deactivate() {}\n", "import * as vscode from 'vscode';\n\n// extension information\nexport const EXTENSION_ID = 'styletoken';\nexport const EXTENSION_NAME = 'Style Tokens';\n\n// style token decorators\nexport const DECORATION_RANGE_BEHAVIOR = vscode.DecorationRangeBehavior.ClosedClosed;\n\nexport const OVERVIEW_RULER_LANE_MAP: { [key: string]: vscode.OverviewRulerLane } = {\n  Center: vscode.OverviewRulerLane.Center,\n  Full: vscode.OverviewRulerLane.Full,\n  Left: vscode.OverviewRulerLane.Left,\n  Right: vscode.OverviewRulerLane.Right,\n};\n\nexport const ALPHA_MAP: { [key: number]: string } = {\n  100: 'FF',\n  99: 'FC',\n  98: 'FA',\n  97: 'F7',\n  96: 'F5',\n  95: 'F2',\n  94: 'F0',\n  93: 'ED',\n  92: 'EB',\n  91: 'E8',\n  90: 'E6',\n  89: 'E3',\n  88: 'E0',\n  87: 'DE',\n  86: 'DB',\n  85: 'D9',\n  84: 'D6',\n  83: 'D4',\n  82: 'D1',\n  81: 'CF',\n  80: 'CC',\n  79: 'C9',\n  78: 'C7',\n  77: 'C4',\n  76: 'C2',\n  75: 'BF',\n  74: 'BD',\n  73: 'BA',\n  72: 'B8',\n  71: 'B5',\n  70: 'B3',\n  69: 'B0',\n  68: 'AD',\n  67: 'AB',\n  66: 'A8',\n  65: 'A6',\n  64: 'A3',\n  63: 'A1',\n  62: '9E',\n  61: '9C',\n  60: '99',\n  59: '96',\n  58: '94',\n  57: '91',\n  56: '8F',\n  55: '8C',\n  54: '8A',\n  53: '87',\n  52: '85',\n  51: '82',\n  50: '80',\n  49: '7D',\n  48: '7A',\n  47: '78',\n  46: '75',\n  45: '73',\n  44: '70',\n  43: '6E',\n  42: '6B',\n  41: '69',\n  40: '66',\n  39: '63',\n  38: '61',\n  37: '5E',\n  36: '5C',\n  35: '59',\n  34: '57',\n  33: '54',\n  32: '52',\n  31: '4F',\n  30: '4D',\n  29: '4A',\n  28: '47',\n  27: '45',\n  26: '42',\n  25: '40',\n  24: '3D',\n  23: '3B',\n  22: '38',\n  21: '36',\n  20: '33',\n  19: '30',\n  18: '2E',\n  17: '2B',\n  16: '29',\n  15: '26',\n  14: '24',\n  13: '21',\n  12: '1F',\n  11: '1C',\n  10: '1A',\n  9: '17',\n  8: '14',\n  7: '12',\n  6: '0F',\n  5: '0D',\n  4: '0A',\n  3: '08',\n  2: '05',\n  1: '03',\n  0: '00',\n};\n", "import * as vscode from 'vscode';\n\nimport { getTokens } from './configuration';\nimport {\n  addStyle,\n  setStyle,\n  removeStyle,\n  removeStyles,\n  findPreviousStyle,\n  findNextStyle,\n} from './lib/disposables/commands';\nimport {\n  refreshStyleActive,\n  refreshStyleCached,\n} from './lib/disposables/listeners';\nimport { Token } from './lib/token';\n\n/**\n * Main registration function for commands and listeners\n */\nexport const registration = (extensionId: string): vscode.Disposable[] => {\n  const vscodeTokens = getTokens(extensionId);\n  const tokens: Token[] = [];\n\n  const disposables: vscode.Disposable[] = [];\n  for (const [key, value] of Object.entries(vscodeTokens)) {\n    const token = new Token(\n      vscode.window.createTextEditorDecorationType(value.decorator),\n      value.option,\n    );\n\n    tokens.push(token);\n    disposables.push(...getListenerDisposables(token));\n    disposables.push(...getCommandDisposables(extensionId, token, key));\n  }\n  disposables.push(...getGlobalDisposables(extensionId, tokens));\n\n  return disposables;\n};\n\nconst getGlobalDisposables = (\n  extensionId: string,\n  tokens: Token[],\n): vscode.Disposable[] => {\n  const functions = [\n    removeStyles,\n  ];\n\n  const disposables: vscode.Disposable[] = [];\n  functions.forEach((fn) => {\n    disposables.push(\n      vscode.commands.registerCommand(`${extensionId}.${fn.name}`, () => {\n        const activeEditor = vscode.window.activeTextEditor;\n        if (activeEditor != null) {\n          fn(activeEditor, tokens);\n        }\n      }),\n    );\n  });\n  return disposables;\n};\n\nconst getListenerDisposables = (\n  token: Token,\n): vscode.Disposable[] => {\n  const disposables: vscode.Disposable[] = [];\n  disposables.push(vscode.window.onDidChangeVisibleTextEditors(() => {\n    const activeEditor = vscode.window.activeTextEditor;\n    if (activeEditor != null) {\n      refreshStyleCached(activeEditor, token);\n    }\n  }));\n  disposables.push(vscode.workspace.onDidChangeTextDocument(() => {\n    const activeEditor = vscode.window.activeTextEditor;\n    if (activeEditor != null) {\n      refreshStyleActive(activeEditor, token);\n    }\n  }));\n  return disposables;\n};\n\nconst getCommandDisposables = (\n  extensionId: string,\n  token: Token,\n  tokenName: string,\n): vscode.Disposable[] => {\n  const functions = [\n    addStyle,\n    setStyle,\n    removeStyle,\n    findPreviousStyle,\n    findNextStyle,\n  ];\n  const disposables: vscode.Disposable[] = [];\n  functions.forEach((fn) => {\n    disposables.push(\n      vscode.commands.registerCommand(`${extensionId}.${tokenName}.${fn.name}`, () => {\n        const activeEditor = vscode.window.activeTextEditor;\n        if (activeEditor != null) {\n          fn(activeEditor, token);\n        }\n      }),\n    );\n  });\n  return disposables;\n};\n", "import * as vscode from 'vscode';\n\nimport {\n  ALPHA_MAP,\n  DECORATION_RANGE_BEHAVIOR,\n  OVERVIEW_RULER_LANE_MAP,\n} from './lib/constants';\nimport {\n  Decorator,\n  TokenOptions,\n} from './lib/models';\n\n/**\n * Main functions to gather Token configurations\n */\nexport const getTokens = (\n  extensionId: string,\n): { [key: string]: { decorator: Decorator, option: TokenOptions } } => {\n  const tokenNames = getTokenNames(extensionId);\n  const tokenOptions = getTokenConfigurations(tokenNames, extensionId);\n  return tokenNames.reduce((accumulator, tokenName, index) => {\n    return { ...accumulator, [tokenName]: tokenOptions[index] };\n  }, {});\n};\n\nconst getTokenNames = (\n  extensionId: string,\n): string[] => {\n  return Object\n    .keys(vscode.workspace.getConfiguration(extensionId))\n    .filter((key) => {\n      return /^token\\d$/.test(key);\n    });\n};\n\nconst getTokenConfigurations = (\n  tokenNames: string[],\n  extensionId: string,\n): { decorator: Decorator, option: TokenOptions }[] => {\n  const configurations: { decorator: Decorator, option: TokenOptions }[] = [];\n  tokenNames.forEach((token) => {\n    const configuration = vscode.workspace.getConfiguration(`${`${extensionId}.${token}`}`);\n    const decorator: Decorator = {\n      backgroundColor: getHexWithAlpha(configuration.get('backgroundColor')),\n      borderWidth: configuration.get('borderWidth'),\n      borderStyle: configuration.get('borderStyle'),\n      overviewRulerColor: getHexWithAlpha(configuration.get('overviewRulerColor')),\n      overviewRulerLane: OVERVIEW_RULER_LANE_MAP[`${configuration.get('overviewRulerLane')}`],\n      light: {\n        borderColor: getHexWithAlpha(configuration.get('borderColor')),\n      },\n      dark: {\n        borderColor: getHexWithAlpha(configuration.get('borderColor')),\n      },\n      rangeBehavior: DECORATION_RANGE_BEHAVIOR,\n    };\n    const option: TokenOptions = {\n      isCaseSensitive: configuration.get('isCaseSensitive') ?? true,\n      isMatchWholeWord: configuration.get('isMatchWholeWord') ?? false,\n    };\n    configurations.push({ decorator, option });\n  });\n  return configurations;\n};\n\nconst getHexWithAlpha = (\n  hex: unknown,\n): string | undefined => {\n  if (typeof (hex) === 'string') {\n    const base = hex.split('.');\n    const color = base[0];\n    const alpha = Number(base[1]);\n\n    switch (true) {\n      case (Number.isNaN(alpha)):\n      case (alpha > 100):\n        return color + ALPHA_MAP[100];\n      case (alpha < 0):\n        return color + ALPHA_MAP[0];\n      default:\n        return color + ALPHA_MAP[alpha];\n    }\n  }\n};\n", "import * as vscode from 'vscode';\n\nimport {\n  getActiveEditorURI,\n  getPositionAfter,\n  getPositionBefore,\n  getRanges,\n  getTextSelection,\n} from '../commons';\nimport { getPhraseMatches } from '../patterns';\nimport { Token } from '../token';\n\nexport const addStyle = (\n  activeEditor: vscode.TextEditor,\n  token: Token,\n): void => {\n  const text = getTextSelection();\n  if (text == null) {\n    return;\n  }\n  const cachedRange = token.getCachedEditor(activeEditor)?.ranges ?? [];\n  const ranges = [\n    ...cachedRange,\n    ...getRanges(activeEditor, getPhraseMatches(activeEditor, token.options, text)),\n  ];\n  const positions = ranges\n    .map((range) => range.start)\n    .sort((a, b) => activeEditor.document.offsetAt(a) - activeEditor.document.offsetAt(b));\n  token.addCachedEditor(activeEditor, [], positions, ranges, text);\n  activeEditor.setDecorations(token.decorator, ranges);\n};\n\nexport const setStyle = (\n  activeEditor: vscode.TextEditor,\n  token: Token,\n): void => {\n  const text = getTextSelection();\n  if (text == null) {\n    return;\n  }\n  const ranges = getRanges(activeEditor, getPhraseMatches(activeEditor, token.options, text));\n  const positions = ranges.map((range) => range.start);\n  token.setCachedEditor(activeEditor, [], positions, ranges, text);\n  activeEditor.setDecorations(token.decorator, ranges);\n};\n\nexport const removeStyle = (\n  activeEditor: vscode.TextEditor,\n  token: Token,\n): void => {\n  token.removeCachedEditor(activeEditor);\n  activeEditor.setDecorations(token.decorator, []);\n};\n\nexport const removeStyles = (\n  activeEditor: vscode.TextEditor,\n  tokens: Token[],\n): void => tokens.forEach((token) => removeStyle(activeEditor, token));\n\nexport const findPreviousStyle = async (\n  activeEditor: vscode.TextEditor,\n  token: Token,\n): Promise<void> => {\n  const cachedEditor = token.getCachedEditor(activeEditor);\n  if (cachedEditor == null) {\n    return;\n  }\n  await vscode.commands.executeCommand(\n    'editor.action.goToLocations',\n    getActiveEditorURI(),\n    getPositionBefore(activeEditor, cachedEditor),\n    [],\n    'goto',\n  );\n};\n\nexport const findNextStyle = async (\n  activeEditor: vscode.TextEditor,\n  token: Token,\n): Promise<void> => {\n  const cachedEditor = token.getCachedEditor(activeEditor);\n  if (cachedEditor == null) {\n    return;\n  }\n  await vscode.commands.executeCommand(\n    'editor.action.goToLocations',\n    getActiveEditorURI(),\n    getPositionAfter(activeEditor, cachedEditor),\n    [],\n    'goto',\n  );\n};\n", "import * as vscode from 'vscode';\n\nimport {\n  CachedEditor,\n  FlatRange,\n} from './models';\n\n/**\n * Gets the active editor URI if available\n */\nexport const getActiveEditorURI = (): vscode.Uri | undefined => {\n  if (vscode.window.activeTextEditor == null) {\n    return;\n  }\n  return vscode.window.activeTextEditor.document.uri;\n};\n\n/**\n * Gets either the selection, or the text boundary of the cursor position\n */\nexport const getTextSelection = (): string | undefined => {\n  const activeEditor = vscode.window.activeTextEditor;\n  if (activeEditor == null) {\n    return;\n  }\n  const cursor = activeEditor.selection.start;\n  const selection = activeEditor.selection.isEmpty\n    ? activeEditor.document.getWordRangeAtPosition(cursor)\n    : activeEditor.selection;\n  if (selection == null) {\n    return;\n  }\n  return activeEditor.document.getText(selection);\n};\n\n/**\n * Gets next position\n *\n * @param activeEditor\n * @param cachedEditor\n */\nexport const getPositionAfter = (\n  activeEditor: vscode.TextEditor,\n  cachedEditor: CachedEditor,\n): vscode.Position => {\n  const positions = cachedEditor.positions;\n  return positions.find(\n    (position) => position.isAfter(activeEditor.selection.start),\n  ) ?? positions[0];\n};\n\n/**\n * Gets previous position\n *\n * @param activeEditor\n * @param cachedEditor\n */\nexport const getPositionBefore = (\n  activeEditor: vscode.TextEditor,\n  cachedEditor: CachedEditor,\n): vscode.Position => {\n  const positions = cachedEditor.positions;\n  const positionIndex = positions.findIndex(\n    (position) => position.isAfterOrEqual(activeEditor.selection.start),\n  );\n  return positionIndex === -1\n    ? positions.slice(positionIndex)[0] : positions.slice(positionIndex - 1)[0];\n};\n\n/**\n * Gets a vscode.Position value from offset\n *\n * @param activeEditor\n * @param offset\n */\nexport const getPosition = (\n  activeEditor: vscode.TextEditor,\n  offset: number,\n): vscode.Position => activeEditor.document.positionAt(offset);\n\n/**\n * Gets a vscode.Range value from flatRange\n *\n * @param activeEditor\n * @param flatRange\n */\nexport const getRange = (\n  activeEditor: vscode.TextEditor,\n  flatRange: FlatRange,\n): vscode.Range => new vscode.Range(\n  getPosition(activeEditor, flatRange.startOffset),\n  getPosition(activeEditor, flatRange.endOffset),\n);\n\n/**\n * Gets an array of vscode.Range from an array of flatRange\n *\n * @param activeEditor\n * @param flatRanges\n */\nexport const getRanges = (\n  activeEditor: vscode.TextEditor,\n  flatRanges: FlatRange[],\n): vscode.Range[] => flatRanges.map((flatRange) => getRange(activeEditor, flatRange));\n", "import * as vscode from 'vscode';\n\nimport {\n  FlatRange,\n  TokenOptions,\n} from './models';\n\nexport const getPhraseMatches = (\n  activeEditor: vscode.TextEditor,\n  options: TokenOptions,\n  phrase: string,\n): FlatRange[] => {\n  phrase = options.isCaseSensitive === true\n    ? phrase\n    : phrase.toLowerCase();\n\n  const documentText = options.isCaseSensitive === true\n    ? activeEditor.document.getText()\n    : activeEditor.document.getText().toLowerCase();\n  const location = {\n    flatRanges: [] as FlatRange[],\n    lastOffset: 0,\n  };\n\n  const textInFrontOfSelectedText = documentText\n    .split(phrase)\n    .slice(0, -1);\n  const locations = textInFrontOfSelectedText.reduce((loc, textInFront) => {\n    const startOffset = loc.lastOffset + textInFront.length;\n    const endOffset = startOffset + phrase.length;\n    return {\n      flatRanges: loc.flatRanges.concat({ startOffset, endOffset }),\n      lastOffset: endOffset,\n    };\n  }, location);\n  return locations.flatRanges;\n};\n\n// regex\n\n// references\n", "import * as vscode from 'vscode';\n\nimport { FlatRange } from '../models';\nimport { getRanges } from '../commons';\nimport { getPhraseMatches } from '../patterns';\nimport { Token } from '../token';\n\nexport const refreshStyleCached = (\n  activeEditor: vscode.TextEditor,\n  token: Token,\n): void => {\n  const ranges = token.getCachedEditor(activeEditor)?.ranges;\n  if (ranges == null) {\n    return;\n  }\n  activeEditor.setDecorations(token.decorator, ranges);\n};\n\nexport const refreshStyleActive = (\n  activeEditor: vscode.TextEditor,\n  token: Token,\n): void => {\n  const texts = token.getCachedEditor(activeEditor)?.texts;\n  if (texts == null) {\n    return;\n  }\n\n  const flatRanges: FlatRange[] = [];\n  texts.forEach((text) => {\n    flatRanges.push(...getPhraseMatches(activeEditor, token.options, text));\n  });\n\n  const ranges = getRanges(activeEditor, flatRanges);\n  const offsets = flatRanges\n    .map((range) => range.startOffset)\n    .sort((a, b) => a - b);\n  const positions = offsets.map((offset) => activeEditor.document.positionAt(offset));\n\n  token.addCachedEditor(activeEditor, offsets, positions, ranges, '');\n  activeEditor.setDecorations(token.decorator, ranges);\n};\n", "import * as vscode from 'vscode';\n\nimport {\n  CachedEditor,\n  Path,\n  TokenOptions,\n} from './models';\n\n/**\n * Style Token containing the location of highlights,\n * decorations, and options.\n */\nexport class Token {\n  paths: Path | undefined;\n\n  constructor(\n    public decorator: vscode.TextEditorDecorationType,\n    public options: TokenOptions,\n  ) {}\n\n  getCachedEditor(\n    activeEditor: vscode.TextEditor,\n  ): CachedEditor | undefined {\n    return this.paths?.[activeEditor.document.uri.path];\n  }\n\n  setCachedEditor(\n    activeEditor: vscode.TextEditor,\n    offsets: number[],\n    positions: vscode.Position[],\n    ranges: vscode.Range[],\n    text: string,\n  ): void {\n    const path = activeEditor.document.uri.path;\n    this.paths = {\n      ...this.paths,\n      [path]: {\n        offsets,\n        positions,\n        ranges,\n        texts: [text],\n      },\n    };\n  }\n\n  addCachedEditor(\n    activeEditor: vscode.TextEditor,\n    offsets: number[],\n    positions: vscode.Position[],\n    ranges: vscode.Range[],\n    text: string,\n  ): void {\n    const path = activeEditor.document.uri.path;\n    if (this.paths?.[path] != null) {\n      this.paths[path].offsets = Array.isArray(offsets)\n        ? this.paths[path].offsets\n        : offsets;\n      this.paths[path].positions = positions;\n      this.paths[path].ranges = ranges;\n      this.paths[path].texts = text === ''\n        ? this.paths[path].texts\n        : this.paths[path].texts.concat(text);\n    } else {\n      this.setCachedEditor(activeEditor, offsets, positions, ranges, text);\n    }\n  }\n\n  removeCachedEditor(\n    activeEditor: vscode.TextEditor,\n  ): void {\n    const path = activeEditor.document.uri.path;\n    if (this.paths?.[path] != null) {\n      delete this.paths[path];\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["vscode", "vscode", "vscode", "vscode"]
}
